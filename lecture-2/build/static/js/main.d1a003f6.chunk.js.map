{"version":3,"sources":["assets/rio-2016.jpg","assets/london-2012.jpg","assets/rio-flag.jpeg","assets/london-flag.png","components/Header.js","components/InfoTable.js","components/Bar.js","components/SurveyItem.js","components/SurveyChart.js","components/Footer.js","App.js","index.js"],"names":["module","exports","HeaderWrap","styled","div","Layer","ContentWrap","ContentBody","LayerBottom","rioBg","BottomContent","LayerTop","londonBg","TopContentWrap","TopContent","Versus","FlagImg","img","Header","src","rioFlag","alt","londonFlag","InfoTableWrapper","Table","table","TR","tr","TH","th","RioTH","LondonTH","TD","td","RioTD","LondonTD","InfoTable","BarWrapper","isSelected","BarInfo","Percent","span","ItemVaue","Count","BarGraph","width","Bar","props","onClick","handleClickBar","percent","itemValue","count","Question","SurveyItem","total","Object","values","data","reduce","a","b","className","survey","no","question","items","map","item","index","hasOwnProperty","toFixed","key","toggleFilter","selectedItem","SurveyChartWrapper","SurveyChartTitle","SurveyChart","useState","answer","setAnswer","setSurvey","filter","setFilter","useEffect","Promise","all","fetch","then","res","json","questionIndex","itemIndex","_filter","assign","filteredAnswer","keys","i","length","chartData","j","FooterWrapper","Footer","ImageModal","lazy","ButtonModal","button","App","showModal","setShowModal","fallback","closeModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1a003f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rio-2016.03a848a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/london-2012.ecf093d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rio-flag.e7607cdb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/london-flag.d110dfed.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport rioBg from '../assets/rio-2016.jpg'\nimport londonBg from '../assets/london-2012.jpg'\nimport rioFlag from '../assets/rio-flag.jpeg'\nimport londonFlag from '../assets/london-flag.png'\n\nconst Header = () => {\n    return (\n        <HeaderWrap>\n            <LayerBottom>\n                <ContentWrap>\n                    <BottomContent>\n                        <FlagImg src={rioFlag} alt=\"rio\" />\n                    </BottomContent>\n                </ContentWrap>\n            </LayerBottom>\n            <LayerTop>\n                <TopContentWrap>\n                    <TopContent>\n                        <FlagImg src={londonFlag} alt=\"london\" />\n                    </TopContent>\n                </TopContentWrap>\n            </LayerTop>\n            <Versus>VS</Versus>\n        </HeaderWrap>\n    )\n}\n\nconst HeaderWrap = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    width: 100%;\n    height: 300px;\n    font-size: 18px;\n    font-weight: 300;\n    overflow: hidden;\n    z-index: 100;\n`\n\nconst Layer = styled.div`\n    position: absolute;\n    width: 100%;\n    min-height: 300px;\n    overflow: hidden;\n    z-index: 100;\n`\n\nconst ContentWrap = styled.div`\n    position: absolute;\n    width: 100%;\n    min-height: 300px;\n    z-index: 100;\n`\n\nconst ContentBody = styled.div`\n    position: absolute;\n    top: 50%;\n    text-align: center;\n    transform: translate(-50%, -50%);\n`\n\nconst LayerBottom = styled(Layer)`\n    background: url(${rioBg}) no-repeat;\n    background-size: cover;\n    z-index: 101;\n`\n\nconst BottomContent = styled(ContentBody)`\n    left: 75%;\n`\n\nconst LayerTop = styled(Layer)`\n    background: url(${londonBg}) no-repeat;\n    background-size: cover;\n    background-position: 30% 15%;\n    color: #222;\n    z-index: 102;\n    width: 50vw;\n    transform: skew(-20deg);\n    margin-left: -50%;\n`\n\nconst TopContentWrap = styled(ContentWrap)`\n    transform: skew(20deg);\n    margin-left: 50%;\n    width: 100%;\n`\n\nconst TopContent = styled(ContentBody)`\n    color: #222;\n`\n\nconst Versus = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: #fff;\n    font-size: 100px;\n    font-weight: 700;\n    z-index: 103;\n`\n\nconst FlagImg = styled.img`\n    width: 140px;\n`\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst InfoTable = () => {\n    return (\n        <InfoTableWrapper>\n            <Table><tbody>\n                <TR>\n                    <TH></TH>\n                    <RioTH>리우 올림픽</RioTH>\n                    <LondonTH>런던 올림픽</LondonTH>\n                </TR>\n                <TR>\n                    <TH>기간</TH>\n                    <RioTD>8월 5일 ~ 8월 21일</RioTD>\n                    <LondonTD>7월 27일 ~ 8월 12일</LondonTD>\n                </TR>\n                <TR>\n                    <TH>개최지</TH>\n                    <RioTD>브라질, 리우</RioTD>\n                    <LondonTD>영국, 런던</LondonTD>\n                </TR>\n                <TR>\n                    <TH>참가 선수</TH>\n                    <RioTD>11,238</RioTD>\n                    <LondonTD>10,568</LondonTD>\n                </TR>\n                <TR>\n                    <TH>참가국</TH>\n                    <RioTD>207</RioTD>\n                    <LondonTD>204</LondonTD>\n                </TR>\n                <TR>\n                    <TH>종목 수</TH>\n                    <RioTD>306</RioTD>\n                    <LondonTD>302</LondonTD>\n                </TR>\n            </tbody></Table>\n        </InfoTableWrapper>\n    )\n}\n\nconst InfoTableWrapper = styled.div`\n    padding 90px 50px 50px 50px;\n    text-align: center;\n    max-width: 800px;\n    margin: auto;\n    box-sizing: border-box;\n`\nconst Table = styled.table`\n    width: 100%;\n    font-size: 1.05em;\n    font-weight: 400;\n`\nconst TR = styled.tr`\n`\nconst TH = styled.th`\n    padding: 15px 5px;\n    font-weight: 600;\n    background: #e7e7e7;\n    color: #555;\n`\nconst RioTH = styled(TH)`\n    background: #92278f;\n    color: #fff;\n`\nconst LondonTH = styled(TH)`\n    background: #63b330;\n    color: #fff;\n`\nconst TD = styled.td`\n    padding: 15px 5px;\n    background: #e7e7e7;\n`\nconst RioTD = styled(TD)`\n\n`\nconst LondonTD = styled(TD)`\n\n`\n\nexport default InfoTable\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Bar = (props) => {\n    return (\n        <BarWrapper onClick={props.handleClickBar} isSelected={props.isSelected}>\n            <BarInfo>\n                <Percent>{props.percent}%</Percent>\n                <ItemVaue>{props.itemValue}</ItemVaue>\n                <Count>{props.count}</Count>\n            </BarInfo>\n            <BarGraph width={props.percent} isSelected={props.isSelected}></BarGraph>\n        </BarWrapper>\n    )\n}\n\nconst BarWrapper = styled.div`\n    position: relative;\n    margin-bottom: 3px;\n    padding: 8px 0;\n    background: ${({isSelected}) => isSelected ? '#dddddd' : '#f3f3f3'};\n`\nconst BarInfo = styled.div`\n    width: 100%;\n    display: flex;\n    z-index: 2;\n    position: relative;\n`\nconst Percent = styled.span`\n    text-align: right;\n    min-width: 70px;\n    flex: 0 0 auto;\n`\nconst ItemVaue = styled.span`\n    padding-left: 60px;\n    flex: 1 1 0%;\n`\nconst Count = styled.span`\n    padding-right: 20px;\n    flex: 0 0 auto;\n`\nconst BarGraph = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    transform: scaleX(${({width}) => width / 100});\n    transform-origin: center left;\n    transition: transform 1.5s ease;\n    height: 100%;\n    background: ${({isSelected}) => isSelected ? 'rgba(126, 198, 81, 0.7)' : 'rgb(198, 198, 198)'};\n    z-index: 1;\n`\n\nexport default Bar\n","import React from 'react'\nimport styled from 'styled-components'\nimport Bar from './Bar'\n\nconst SurveyItem = (props) => {\n    let total = Object.values(props.data).reduce((a, b) => a + b, 0)\n    return (\n        <div className=\"SurveyItem\">\n            <Question>Q{props.survey.no + 1}. {props.survey.question}</Question>\n            <div>\n                {props.survey.items.map((item, index) => {\n                    let percent = props.data.hasOwnProperty(index) ? (props.data[index] / total * 100).toFixed(1) : 0\n                    return (\n                        <Bar \n                            key={`bar-item-${index}`} \n                            percent={percent} \n                            itemValue={item} \n                            count={props.data[index]} \n                            handleClickBar={() => {props.toggleFilter(props.survey.no - 1, index)}}\n                            isSelected={props.selectedItem === index}\n                        />\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst Question = styled.div`\n    font-weight: 500;\n    font-size: 1.03em;\n    padding: 25px 0 8px 0;\n    text-align: left;\n`\n\nexport default SurveyItem\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport SurveyItem from './SurveyItem'\n\n\nconst SurveyChart = () => {\n    const [answer, setAnswer] = useState([])\n    const [survey, setSurvey] = useState([])\n    const [filter, setFilter] = useState({})\n\n    useEffect(() => {\n        Promise.all([\n            fetch('http://localhost:3001/answer').then((res) => res.json()),\n            fetch('http://localhost:3001/survey').then((res) => res.json())\n        ])\n            .then(([answer, survey]) => {\n                setAnswer(answer.data)\n                setSurvey(survey)\n            })\n    }, [])\n\n\n    const toggleFilter = (questionIndex, itemIndex) => {\n        let _filter = Object.assign({}, filter);\n        if(_filter.hasOwnProperty(questionIndex) && _filter[questionIndex] === itemIndex) {\n            delete _filter[questionIndex]\n        } else {\n            _filter[questionIndex] = itemIndex\n        }\n        setFilter(_filter)\n    }\n\n    // 선택한 항목에 대한 답변만 필터링\n    let filteredAnswer = answer.filter((item) => {\n        var keys = Object.keys(filter)\n        for(let i = 0; i < keys.length; i++) {\n            if(filter[keys[i]] !== item[keys[i]])\n                return false\n        }\n        return true\n    })\n\n    // 답변 정보를 항목별 통계 정보로 재가공\n    let chartData = {}\n    for(let i = 0; i < filteredAnswer.length; i++) {\n        for(let j = 0; j < filteredAnswer[i].length; j++) {\n            if(!chartData.hasOwnProperty(j)) {\n                chartData[j] = {}\n            }\n            if(!chartData[j].hasOwnProperty(filteredAnswer[i][j])) {\n                chartData[j][filteredAnswer[i][j]] = 0\n            }\n            chartData[j][filteredAnswer[i][j]]++\n        }\n    }\n\n    return (\n        <SurveyChartWrapper>\n            <SurveyChartTitle>설문 결과</SurveyChartTitle>\n            {survey.map((item, index) => (\n                <SurveyItem \n                    key={`survey-item-${index}`} \n                    data={chartData[index] || {}} \n                    survey={item}\n                    toggleFilter={toggleFilter}\n                    selectedItem={filter[index]}\n                />\n            ))}\n        </SurveyChartWrapper>\n    )\n}\n\nconst SurveyChartWrapper = styled.div`\n    padding: 150px 20px 60px 20px; \n    max-width: 800px;\n    margin: auto;\n    box-sizing: border-box;\n`\n\nconst SurveyChartTitle = styled.div`\n    text-align: center;\n    font-size: 2em;\n    font-weight: 700;\n    color: rgba(0, 0, 0, 0.5);\n    padding-bottom: 20px;\n`\n\nexport default SurveyChart\n","import React from 'react'\nimport styled from 'styled-components'\n\nfunction Footer() {\n\treturn (\n\t\t<FooterWrapper>\n\t\t\t©Performance Optimization Lecture for React\n\t\t</FooterWrapper>\n\t)\n}\n\nconst FooterWrapper = styled.div`\n  text-align: center;\n  padding: 32px 0;\n`\n\nexport default Footer\n","import React, {lazy, Suspense, useState} from 'react'\nimport styled from 'styled-components'\nimport Header from './components/Header'\nimport InfoTable from './components/InfoTable'\nimport SurveyChart from './components/SurveyChart'\nimport Footer from './components/Footer'\n\nconst ImageModal = lazy(() => import('./components/ImageModal'));\n\nfunction App() {\n    const [showModal, setShowModal] = useState(false)\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <InfoTable />\n            <ButtonModal onClick={() => { setShowModal(true) }}>올림픽 사진 보기</ButtonModal>\n            <SurveyChart />\n            <Footer />\n            <Suspense fallback={<div>로딩중...</div>}>\n            {showModal ? <ImageModal closeModal={() => { setShowModal(false) }} /> : null}\n            </Suspense>\n        </div>\n    )\n}\n\nconst ButtonModal = styled.button`\n    border-radius: 30px;\n    border: 1px solid #999;\n    padding: 12px 30px;\n    background: none;\n    font-size: 1.1em;\n    color: #555;\n    outline: none;\n    cursor: pointer;\n`\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}